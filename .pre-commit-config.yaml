---
repos:
  # Base hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
      - id: trailing-whitespace                 # This hook trims trailing whitespace.
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer                   # Ensures that a file is either empty, or ends with one newline.
      - id: check-json                          # This hook checks json files for parseable syntax.
      - id: check-yaml                          # This hook checks yaml files for parseable syntax.
      - id: check-added-large-files             # Prevent giant files from being committed (default = 500 kB).
      - id: pretty-format-json                  # This hook sets a standard for formatting JSON files.
        args: [--no-sort-keys, --autofix]

  # Python docstrings formatter
  - repo: https://github.com/myint/docformatter
    rev: v1.3.1
    hooks:
      - id: docformatter
        args: [--in-place, --wrap-descriptions=100, --wrap-summaries=120]

  # Python imports formatter
  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.7.0
    hooks:
      - id: isort
        args: [--line-length=100, --lines-between-types=1, --multi-line=3, --section-default=THIRDPARTY, --force-grid-wrap=0,
          --length-sort, --use-parentheses, --trailing-comma]

   # Python code formatter
  - repo: https://github.com/psf/black
    rev: 21.9b0
    hooks:
      - id: black
        args: [--line-length=100, --target-version=py39]

  # Python code linter
  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.9.2
    hooks:
      - id: flake8
        args: ['--ignore=W503,E203,C901,W605', --max-line-length=100]
        # W503: Line break occurred before a binary operator
        # E203: Whitespace before ':' - also black compatible
        # C901: Function is too complex
        # W605: invalid escape sequence

  # C++ code hooks
  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.3.4
    hooks:
      - id: clang-format
        args: [--style=Google, 	-i]
      - id: cppcheck
      - id: cpplint
        args: ['--filter=-legal/copyright']
